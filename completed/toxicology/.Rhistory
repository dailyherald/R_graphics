# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
#legend.title = element_blank(),
...
)
}
# -------------
# prepare the data
df <- read_csv("tox.csv")
df$sort <- seq.int(nrow(df))
df$Halone <- round((df$Heroin_alone/df$Total)*100, digits=1)
df$Hother <- round((df$Heroin_and_other/df$Total)*100, digits=1)
df$other <- round((df$opioids_without_heroin/df$Total)*100, digits=1)
df$Heroin_alone <- NULL
df$Heroin_and_other <- NULL
df$opioids_without_heroin <- NULL
dfsub <- gather(df, set, value, 5:7, factor_key=TRUE)
dfsub$Year <- as.factor(dfsub$Year)
# changes labels and sets order of factor
dfsub$set <- factor(dfsub$set, levels = c("other","Hother","Halone"),
labels = c(" % Synthetic opiods\n without heroin*"," % Heroin with \n other drugs*    "," % Heroin  \n only"))
dfsub$County <- factor(dfsub$County, levels = c("Cook","DuPage","Kane","Lake","McHenry","Will"),
labels = c("     COOK CO. TOTAL DEATHS - 2016: 256, 2017: 100","     DUPAGE CO. TOTAL DEATHS - 2016: 78, 2017 22","     KANE CO. TOTAL DEATHS - 2016: 46, 2017: 24","     LAKE CO. TOTAL DEATHS - 2016: 46, 2017: 17","     MCHENRY CO. TOTAL DEATHS - 2016: 31, 2017: 18","     WILL CO. TOTAL DEATHS - 2016: 74, 2017: 28" ))
#-----Insert plot here -------------
stacked <- ggplot(dfsub) +
aes(x = reorder(Year, -sort),
y = value,
fill = set,
label = value) +
geom_bar(stat = "identity") +
coord_flip() +
theme_gfx() +
facet_wrap(~County,ncol=1)
# add all the titles.
stacked <- stacked + labs(
title="A turn for the worse", # your headline
subtitle="Suburban counties are seeing an increase \nin overdose deaths caused by more than \njust heroin. Coroners say fentanyl and \nsynthetic opioids have been contributing \nto more deaths beginning last year.",
x="YEAR",
y="PERCENT OF DEATHS",
caption="\n* Includes fentanyl and synthetic opioids.\nNote: 2017 numbers are through June 15. Cook County data \nexcludes Chicago.\nDaily Herald Graphic | Sources: County coroners.",
fill = "OPIOID-RELATED OVERDOSE DEATHS") +
# if values were decimal, would be label = percent
# instead assigns specific text to y axis labels
scale_y_continuous(label = c("0","25%","50%","75%","100%")) +
guides(fill=guide_legend(reverse=T,
title.position="top",
title.hjust = 0.5,
keywidth = unit(8, units = "mm")
)
)
# Here's where we go further in formating the bar values
stacked <- stacked + geom_text(
position = "stack",
aes(x = Year,
y = value - (value * 0.025),
hjust = 1,
label = paste0(value) ),
size=5,
family="Verdana",
fontface="bold",
color="white"
)
# color scheme - comment out for B/W PDF
stacked <- stacked + scale_colour_few(palette="medium") + scale_fill_few(palette="medium")
# make B/W PDF - remember to change name of file!
#stacked <- stacked + scale_colour_grey(start = 0, end = 0.75) + scale_fill_grey(start = 0, end = 0.75)
stacked
#----- End and save plot --------------
# save for PDF
#ggsave("toxicology.pdf", width = 7, height = 9.5, device=cairo_pdf, units = c("in"), dpi = 300, limitsize = FALSE)
# save for web
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
#theme_get()$text
library(readr)
library(Cairo) # on Mac need to install XQuartz
library(ggplot2)
library(ggthemes)
library(tidyr)
# For windows devices only
windowsFonts(Verdana=windowsFont('Verdana'))
#---------------------
# This function set styles for the chart
# Be sure to run it before you plot
theme_gfx <- function(...) {
theme_set(theme_get() + theme(text = element_text(family = 'Verdana', size= 12, lineheight=0.9))) +
theme(
# edit background colors
plot.background = element_blank(),
legend.background = element_blank(),
panel.background=element_rect(fill="#E5E5E5"),
strip.background=element_rect(fill="#E5E5E5"),
# modify grid and tick lines
panel.grid.major = element_line(size = .6, color="#D2D2D2"),
panel.grid.minor = element_line(size = .6, color="#D2D2D2", linetype = "dashed"),
axis.ticks = element_blank(),
# edit font sizes
plot.title = element_text(size = 28,face="bold"),
plot.subtitle = element_text(size = 18),
legend.title=element_text(face="bold"),
legend.text=element_text(size=14.7),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13.5),
plot.caption=element_text(size=13.5, hjust=0),
strip.text = element_text(face="bold", size=13.5, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
#legend.title = element_blank(),
...
)
}
# -------------
# prepare the data
df <- read_csv("tox.csv")
df$sort <- seq.int(nrow(df))
df$Halone <- round((df$Heroin_alone/df$Total)*100, digits=1)
df$Hother <- round((df$Heroin_and_other/df$Total)*100, digits=1)
df$other <- round((df$opioids_without_heroin/df$Total)*100, digits=1)
df$Heroin_alone <- NULL
df$Heroin_and_other <- NULL
df$opioids_without_heroin <- NULL
dfsub <- gather(df, set, value, 5:7, factor_key=TRUE)
dfsub$Year <- as.factor(dfsub$Year)
# changes labels and sets order of factor
dfsub$set <- factor(dfsub$set, levels = c("other","Hother","Halone"),
labels = c(" % Synthetic opiods\n without heroin*"," % Heroin with \n other drugs*    "," % Heroin  \n only"))
dfsub$County <- factor(dfsub$County, levels = c("Cook","DuPage","Kane","Lake","McHenry","Will"),
labels = c("     COOK CO. TOTAL DEATHS - 2016: 256, 2017: 100","     DUPAGE CO. TOTAL DEATHS - 2016: 78, 2017 22","     KANE CO. TOTAL DEATHS - 2016: 46, 2017: 24","     LAKE CO. TOTAL DEATHS - 2016: 46, 2017: 17","     MCHENRY CO. TOTAL DEATHS - 2016: 31, 2017: 18","     WILL CO. TOTAL DEATHS - 2016: 74, 2017: 28" ))
#-----Insert plot here -------------
stacked <- ggplot(dfsub) +
aes(x = reorder(Year, -sort),
y = value,
fill = set,
label = value) +
geom_bar(stat = "identity") +
coord_flip() +
theme_gfx() +
facet_wrap(~County,ncol=1)
# add all the titles.
stacked <- stacked + labs(
title="A turn for the worse", # your headline
subtitle="Suburban counties are seeing an increase \nin overdose deaths caused by more than \njust heroin. Coroners say fentanyl and \nsynthetic opioids have been contributing \nto more deaths beginning last year.",
x="YEAR",
y="PERCENT OF DEATHS",
caption="\n* Includes fentanyl and synthetic opioids.\nNote: 2017 numbers are through June 15. Cook County data \nexcludes Chicago.\nDaily Herald Graphic | Sources: County coroners.",
fill = "OPIOID-RELATED OVERDOSE DEATHS") +
# if values were decimal, would be label = percent
# instead assigns specific text to y axis labels
scale_y_continuous(label = c("0","25%","50%","75%","100%")) +
guides(fill=guide_legend(reverse=T,
title.position="top",
title.hjust = 0.5,
keywidth = unit(8, units = "mm")
)
)
# Here's where we go further in formating the bar values
stacked <- stacked + geom_text(
position = "stack",
aes(x = Year,
y = value - (value * 0.025),
hjust = 1,
label = paste0(value) ),
size=5,
family="Verdana",
fontface="bold",
color="white"
)
# color scheme - comment out for B/W PDF
stacked <- stacked + scale_colour_few(palette="medium") + scale_fill_few(palette="medium")
# make B/W PDF - remember to change name of file!
#stacked <- stacked + scale_colour_grey(start = 0, end = 0.75) + scale_fill_grey(start = 0, end = 0.75)
stacked
#----- End and save plot --------------
# save for PDF
#ggsave("toxicology.pdf", width = 7, height = 9.5, device=cairo_pdf, units = c("in"), dpi = 300, limitsize = FALSE)
# save for web
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
#theme_get()$text
library(readr)
library(Cairo) # on Mac need to install XQuartz
library(ggplot2)
library(ggthemes)
library(tidyr)
# For windows devices only
windowsFonts(Verdana=windowsFont('Verdana'))
#---------------------
# This function set styles for the chart
# Be sure to run it before you plot
theme_gfx <- function(...) {
theme_set(theme_get() + theme(text = element_text(family = 'Verdana', size= 12, lineheight=0.9))) +
theme(
# edit background colors
plot.background = element_blank(),
legend.background = element_blank(),
panel.background=element_rect(fill="#E5E5E5"),
strip.background=element_rect(fill="#E5E5E5"),
# modify grid and tick lines
panel.grid.major = element_line(size = .6, color="#D2D2D2"),
panel.grid.minor = element_line(size = .6, color="#D2D2D2", linetype = "dashed"),
axis.ticks = element_blank(),
# edit font sizes
plot.title = element_text(size = 27,face="bold"),
plot.subtitle = element_text(size = 18),
legend.title=element_text(size = 13,face="bold"),
legend.text=element_text(size=14.7),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13.5),
plot.caption=element_text(size=13.5, hjust=0),
strip.text = element_text(face="bold", size=13.5, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
#legend.title = element_blank(),
...
)
}
# -------------
# prepare the data
df <- read_csv("tox.csv")
df$sort <- seq.int(nrow(df))
df$Halone <- round((df$Heroin_alone/df$Total)*100, digits=1)
df$Hother <- round((df$Heroin_and_other/df$Total)*100, digits=1)
df$other <- round((df$opioids_without_heroin/df$Total)*100, digits=1)
df$Heroin_alone <- NULL
df$Heroin_and_other <- NULL
df$opioids_without_heroin <- NULL
dfsub <- gather(df, set, value, 5:7, factor_key=TRUE)
dfsub$Year <- as.factor(dfsub$Year)
# changes labels and sets order of factor
dfsub$set <- factor(dfsub$set, levels = c("other","Hother","Halone"),
labels = c(" % Synthetic opiods\n without heroin*"," % Heroin with \n other drugs*    "," % Heroin  \n only"))
dfsub$County <- factor(dfsub$County, levels = c("Cook","DuPage","Kane","Lake","McHenry","Will"),
labels = c("     COOK CO. TOTAL DEATHS - 2016: 256, 2017: 100","     DUPAGE CO. TOTAL DEATHS - 2016: 78, 2017 22","     KANE CO. TOTAL DEATHS - 2016: 46, 2017: 24","     LAKE CO. TOTAL DEATHS - 2016: 46, 2017: 17","     MCHENRY CO. TOTAL DEATHS - 2016: 31, 2017: 18","     WILL CO. TOTAL DEATHS - 2016: 74, 2017: 28" ))
#-----Insert plot here -------------
stacked <- ggplot(dfsub) +
aes(x = reorder(Year, -sort),
y = value,
fill = set,
label = value) +
geom_bar(stat = "identity") +
coord_flip() +
theme_gfx() +
facet_wrap(~County,ncol=1)
# add all the titles.
stacked <- stacked + labs(
title="A turn for the worse", # your headline
subtitle="Suburban counties are seeing an increase \nin overdose deaths caused by more than \njust heroin. Coroners say fentanyl and \nsynthetic opioids have been contributing \nto more deaths beginning last year.",
x="YEAR",
y="PERCENT OF DEATHS",
caption="\n* Includes fentanyl and synthetic opioids.\nNote: 2017 numbers are through June 15. Cook County data \nexcludes Chicago.\nDaily Herald Graphic | Sources: County coroners.",
fill = "OPIOID-RELATED OVERDOSE DEATHS") +
# if values were decimal, would be label = percent
# instead assigns specific text to y axis labels
scale_y_continuous(label = c("0","25%","50%","75%","100%")) +
guides(fill=guide_legend(reverse=T,
title.position="top",
title.hjust = 0.5,
keywidth = unit(8, units = "mm")
)
)
# Here's where we go further in formating the bar values
stacked <- stacked + geom_text(
position = "stack",
aes(x = Year,
y = value - (value * 0.025),
hjust = 1,
label = paste0(value) ),
size=5,
family="Verdana",
fontface="bold",
color="white"
)
# color scheme - comment out for B/W PDF
stacked <- stacked + scale_colour_few(palette="medium") + scale_fill_few(palette="medium")
# make B/W PDF - remember to change name of file!
#stacked <- stacked + scale_colour_grey(start = 0, end = 0.75) + scale_fill_grey(start = 0, end = 0.75)
stacked
#----- End and save plot --------------
# save for PDF
#ggsave("toxicology.pdf", width = 7, height = 9.5, device=cairo_pdf, units = c("in"), dpi = 300, limitsize = FALSE)
# save for web
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
#theme_get()$text
stacked <- stacked + scale_colour_calc() + scale_fill_calc()
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_tableau(palette="tableau10") + scale_fill_tableau(palette="tableau10")
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_hc(palette="darkunica") + scale_fill_hc(palette="darkunica")
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_hc() + scale_fill_hc()
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_few(palette="dark") + scale_fill_few(palette="dark")
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_pander() + scale_fill_pander()
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_ptol() + scale_fill_ptol()
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_canva() + scale_fill_canva()
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked
stacked <- stacked + scale_colour_few(palette="dark") + scale_fill_few(palette="dark")
stacked
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_strata(palette="s2color") + scale_fill_strata(palette="s2color")
stacked
ggsave("toxicology_strata1.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_strata(palette="s1rcolor") + scale_fill_strata(palette="s1rcolor")
stacked
ggsave("toxicology_strata2.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_stata(palette="s2color") + scale_fill_stata(palette="s2color")
stacked
ggsave("toxicology_stata.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- ggplot(dfsub) +
aes(x = reorder(Year, -sort),
y = value,
fill = set,
label = value) +
geom_bar(stat = "identity") +
coord_flip() +
theme_gfx() +
facet_wrap(~County,ncol=1)
# add all the titles.
stacked <- stacked + labs(
title="A turn for the worse", # your headline
subtitle="Suburban counties are seeing an increase \nin overdose deaths caused by more than \njust heroin. Coroners say fentanyl and \nsynthetic opioids have been contributing \nto more deaths beginning last year.",
x="YEAR",
y="PERCENT OF DEATHS",
caption="\n* Includes fentanyl and synthetic opioids.\nNote: 2017 numbers are through June 15. Cook County data \nexcludes Chicago.\nDaily Herald Graphic | Sources: County coroners.",
fill = "OPIOID-RELATED OVERDOSE DEATHS") +
# if values were decimal, would be label = percent
# instead assigns specific text to y axis labels
scale_y_continuous(label = c("0","25%","50%","75%","100%")) +
guides(fill=guide_legend(reverse=T,
title.position="top",
title.hjust = 0.5,
keywidth = unit(8, units = "mm")
)
)
# Here's where we go further in formating the bar values
stacked <- stacked + geom_text(
position = "stack",
aes(x = Year,
y = value - (value * 0.025),
hjust = 1,
label = paste0(value) ),
size=5,
family="Verdana",
fontface="bold",
color="white"
)
# color scheme - comment out for B/W PDF
#stacked <- stacked + scale_colour_few(palette="dark") + scale_fill_few(palette="dark")
stacked <- stacked + scale_colour_stata(palette="s2color") + scale_fill_stata(palette="s2color")
# make B/W PDF - remember to change name of file!
#stacked <- stacked + scale_colour_grey(start = 0, end = 0.75) + scale_fill_grey(start = 0, end = 0.75)
stacked
#----- End and save plot --------------
# save for PDF
#ggsave("toxicology.pdf", width = 7, height = 9.5, device=cairo_pdf, units = c("in"), dpi = 300, limitsize = FALSE)
# save for web
ggsave("toxicology_stata.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
#theme_get()$text
ggsave("toxicology_stata.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_stata(palette="s2color") + scale_fill_stata(scheme="s2color")
stacked
ggsave("toxicology_stata.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_stata(palette="s1color") + scale_fill_stata(scheme="s1color")
stacked
ggsave("toxicology_statas1.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_stata(palette="s1rcolor") + scale_fill_stata(scheme="s1rcolor")
stacked
ggsave("toxicology_statas1r.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_stata(palette="mono") + scale_fill_stata(scheme="mono")
stacked
ggsave("toxicology_statamono.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_gdocs() + scale_fill_gdocs()
stacked
ggsave("toxicology_gdocs.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_hc() + scale_fill_hc()
stacked
ggsave("toxicology_hc.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_economist() + scale_fill_economist()
stacked
ggsave("toxicology_economist.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_solarized() + scale_fill_solarized()
stacked
ggsave("toxicology_solarized.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_stata() + scale_fill_stata()
stacked
ggsave("toxicology_stata.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
stacked <- stacked + scale_colour_tableau() + scale_fill_tableau()
stacked
ggsave("toxicology_tableau.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
library(readr)
library(Cairo) # on Mac need to install XQuartz
library(ggplot2)
library(ggthemes)
library(tidyr)
# For windows devices only
windowsFonts(Verdana=windowsFont('Verdana'))
#---------------------
# This function set styles for the chart
# Be sure to run it before you plot
theme_gfx <- function(...) {
theme_set(theme_get() + theme(text = element_text(family = 'Verdana', size= 12, lineheight=0.9))) +
theme(
# edit background colors
plot.background = element_blank(),
legend.background = element_blank(),
panel.background=element_rect(fill="#E5E5E5"),
strip.background=element_rect(fill="#E5E5E5"),
# modify grid and tick lines
panel.grid.major = element_line(size = .6, color="#D2D2D2"),
panel.grid.minor = element_line(size = .6, color="#D2D2D2", linetype = "dashed"),
axis.ticks = element_blank(),
# edit font sizes
plot.title = element_text(size = 27,face="bold"),
plot.subtitle = element_text(size = 18),
legend.title=element_text(size = 13,face="bold"),
legend.text=element_text(size=14.7),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13.5),
plot.caption=element_text(size=13.5, hjust=0),
strip.text = element_text(face="bold", size=13.5, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
#legend.title = element_blank(),
...
)
}
# -------------
# prepare the data
df <- read_csv("tox.csv")
df$sort <- seq.int(nrow(df))
df$Halone <- round((df$Heroin_alone/df$Total)*100, digits=1)
df$Hother <- round((df$Heroin_and_other/df$Total)*100, digits=1)
df$other <- round((df$opioids_without_heroin/df$Total)*100, digits=1)
df$Heroin_alone <- NULL
df$Heroin_and_other <- NULL
df$opioids_without_heroin <- NULL
dfsub <- gather(df, set, value, 5:7, factor_key=TRUE)
dfsub$Year <- as.factor(dfsub$Year)
# changes labels and sets order of factor
dfsub$set <- factor(dfsub$set, levels = c("other","Hother","Halone"),
labels = c(" % Synthetic opiods\n without heroin*"," % Heroin with \n other drugs*    "," % Heroin  \n only"))
dfsub$County <- factor(dfsub$County, levels = c("Cook","DuPage","Kane","Lake","McHenry","Will"),
labels = c("     COOK CO. TOTAL DEATHS - 2016: 256, 2017: 100","     DUPAGE CO. TOTAL DEATHS - 2016: 78, 2017 22","     KANE CO. TOTAL DEATHS - 2016: 46, 2017: 24","     LAKE CO. TOTAL DEATHS - 2016: 46, 2017: 17","     MCHENRY CO. TOTAL DEATHS - 2016: 31, 2017: 18","     WILL CO. TOTAL DEATHS - 2016: 74, 2017: 28" ))
#-----Insert plot here -------------
stacked <- ggplot(dfsub) +
aes(x = reorder(Year, -sort),
y = value,
fill = set,
label = value) +
geom_bar(stat = "identity") +
coord_flip() +
theme_gfx() +
facet_wrap(~County,ncol=1)
# add all the titles.
stacked <- stacked + labs(
title="A turn for the worse", # your headline
subtitle="Suburban counties are seeing an increase \nin overdose deaths caused by more than \njust heroin. Coroners say fentanyl and \nsynthetic opioids have been contributing \nto more deaths beginning last year.",
x="YEAR",
y="PERCENT OF DEATHS",
caption="\n* Includes fentanyl and synthetic opioids.\nNote: 2017 numbers are through June 15. Cook County data \nexcludes Chicago.\nDaily Herald Graphic | Sources: County coroners.",
fill = "OPIOID-RELATED OVERDOSE DEATHS") +
# if values were decimal, would be label = percent
# instead assigns specific text to y axis labels
scale_y_continuous(label = c("0","25%","50%","75%","100%")) +
guides(fill=guide_legend(reverse=T,
title.position="top",
title.hjust = 0.5,
keywidth = unit(8, units = "mm")
)
)
# Here's where we go further in formating the bar values
stacked <- stacked + geom_text(
position = "stack",
aes(x = Year,
y = value - (value * 0.025),
hjust = 1,
label = paste0(value) ),
size=5,
family="Verdana",
fontface="bold",
color="white"
)
# color scheme - comment out for B/W PDF
stacked <- stacked + scale_colour_tableau() + scale_fill_tableau()
# make B/W PDF - remember to change name of file!
#stacked <- stacked + scale_colour_grey(start = 0, end = 0.75) + scale_fill_grey(start = 0, end = 0.75)
stacked
#----- End and save plot --------------
# save for PDF
#ggsave("toxicology.pdf", width = 7, height = 9.5, device=cairo_pdf, units = c("in"), dpi = 300, limitsize = FALSE)
# save for web
ggsave("toxicology.png", width = 7, height = 9.5, device="png", units = c("in"), dpi = 86, limitsize = FALSE)
#theme_get()$text
ggsave("toxicology.pdf", width = 7, height = 9.5, device=cairo_pdf, units = c("in"), dpi = 300, limitsize = FALSE)
